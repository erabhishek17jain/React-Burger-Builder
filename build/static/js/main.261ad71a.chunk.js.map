{"version":3,"sources":["assets/images/burger-logo.png","hoc/Auxs/Auxs.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","components/About/About.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","auxs","props","children","logo","className","style","height","src","burgerLogo","alt","navigationItem","to","link","exact","activeClassName","navigationItems","isAuth","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","isAuthenticated","Component","connect","auth","token","BurgerIngredient","ingredient","type","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","Auxs","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","addIngredientHandler","removeIngredientHandler","purchaseHandler","onSetAuthRedirect","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","validationMsg","inValid","shouldValidate","touched","valueType","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","invalid","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","quantity","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","queryParam","fetchedOrders","err","about","marginTop","Auth","password","minLingth","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirect","errorMessage","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignUp","routes","About","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","paneer","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.261ad71a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const auxs = (props) => props.children;\r\n\r\nexport default auxs;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"logo\" style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className=\"navigationItem\">\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName=\"active\">{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className=\"navigationItems\">\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {props.isAuth ?\n            <NavigationItem link=\"/orders\">My Orders</NavigationItem> :\n            null}\n        <NavigationItem link=\"/checkout\">Checkout</NavigationItem>\n        <NavigationItem link=\"/about\">About</NavigationItem>\n        {!props.isAuth ?\n            <NavigationItem link=\"/auth\">SignIn</NavigationItem>:\n            <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className=\"drawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className=\"toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className=\"logo\">\n            <Logo />\n        </div>\n        <nav className=\"desktopOnly\">\n            <NavigationItems isAuth = {props.isAuth}/>\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className=\"backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxs/Auxs';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [\"sideDrawer\", \"close\"];\n    if (props.open) {\n        attachedClasses = [\"sideDrawer\", \"open\"];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo height=\"11%\" />\n            <nav>\n            <NavigationItems isAuth = {props.isAuth}/>\n            </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Aux from '../Auxs/Auxs';\nimport './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar \n                    isAuth = {this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth = {this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className=\"content\">\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        isAuthenticated: state.auth.token !==null\n    }\n}\n\nexport default connect(mapToStateProps)(Layout);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className=\"breadBottom\"></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className=\"breadTop\">\n                        <div className=\"seeds1\"></div>\n                        <div className=\"seeds2\"></div>\n                    </div>\n                );\n                break;\n            case ( 'paneer' ):\n                ingredient = <div className=\"paneer\"></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className=\"cheese\"></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className=\"bacon\"></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className=\"salad\"></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className=\"burger\">\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className=\"buildControl\">\n        <div className=\"label\">{props.label}</div>\n        <button \n            className=\"less\" \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className=\"more\" \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Paneer', type: 'paneer' },\n];\n\nconst buildControls = (props) => (\n    <div className=\"buildControls\">\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl  \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className=\"orderButton\"\n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ?  'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react'\r\nimport './Modal.css';\r\nimport Auxs from '../../../hoc/Auxs/Auxs'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('Modal updated')\r\n  }\r\n  render(){\r\n    return(\r\n      <Auxs>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className=\"modal\" style={{\r\n            transform: this.props.show ? 'translateY(0)':'translateY(-100vh)',\r\n            opacity:this.props.show ? '1':'0'\r\n            }}>\r\n            {this.props.children}\r\n        </div>\r\n      </Auxs>\r\n   )\r\n  }\r\n} \r\n\r\nexport default Modal","import React from 'react';\n\nimport './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[\"button\", props.btnType].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Auxs/Auxs';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"button danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"button success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"loader\">Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxs/Auxs';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-c8f5d.firebaseio.com/'\n});\n\nexport default instance;","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB5wEJQDrYofUCqdg4Mnq5yY2Oa5CIn4Sw';\r\n        if (!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB5wEJQDrYofUCqdg4Mnq5yY2Oa5CIn4Sw';\r\n        }\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.userId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn))\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else {\r\n            const expirationDate = new Date (localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else {\r\n                const userId= localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()/1000));\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\nexport const SET_AUTH_REDIRECT = \"SET_AUTH_REDIRECT\"","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Auxs/Auxs';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount () {\n        console.log(this.props); \n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    addIngredientHandler = ( type ) => {\n\n    }\n    removeIngredientHandler = ( type ) => { \n        \n    }\n    purchaseHandler = () => {\n        if(this.props.isAuth){\n            this.setState( { purchasing: true } );\n        } else {\n            this.props.onSetAuthRedirect('/checkout');\n            this.props.history.push('/auth');\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        // const queryParams = [];\n        // for (let i in this.state.ingredients) {\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        // }\n        // queryParams.push('price=' + this.state.totalPrice);\n        // const queryString = queryParams.join('&');\n        // this.props.history.push({\n        //     pathname: '/checkout',\n        //     search: '?' + queryString\n        // });\n\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)} \n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuth}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        // {salad: true, paneer: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuth: state.auth.token\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirect: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = ( name ) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = ( name ) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = ( ingredients ) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get( 'https://react-my-burger-c8f5d.firebaseio.com/ingredients.json' )\n            .then( response => {\n               dispatch(setIngredients(response.data));\n            } )\n            .catch( error => {\n                dispatch(fetchIngredientsFailed());\n            } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth='+token, orderData )\n            .then( response => {\n                console.log( response.data );\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParam = \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' +userId+'\"'\n        axios.get( '/orders.json' + queryParam)\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className=\"checkoutSummary\">\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"button danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"button success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react'\r\nimport'./Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses =  ['inputElement'];\r\n    let validationMsg = '';\r\n    if(props.inValid && props.shouldValidate && props.touched){\r\n        inputClasses.push('invalid');\r\n        validationMsg = <p className=\"validationMsg\">Please enter a valid {props.valueType}</p>\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n            <select style={{width: \"100%\"}}\r\n                className={inputClasses.join(' ')} \r\n                value ={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n            className = {inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n    }\r\n    return (\r\n        <div className=\"input\">\r\n            <label className=\"labels\"></label>\r\n            {inputElement}\r\n            {validationMsg}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default input","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContactData.css'\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n  \n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }\n\n        // axios.post('/orders.json', order)\n        //     .then(response => {\n        //         this.setState({ loading: false });\n        //         this.props.history.push('/');\n        //     })\n        //     .catch(error => {\n        //         this.setState({ loading: false });\n        //     });\n\n        this.props.onOrderBurger(order, this.props.token);\n        \n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"button success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className=\"contactData\">\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    componentWillMount () {\n        // const query = new URLSearchParams( this.props.location.search );\n        // const ingredients = {};\n        // let price = 0;\n        // for ( let param of query.entries() ) {\n        //     // ['salad', '1']\n        //     if (param[0] === 'price') {\n        //         price = param[1];\n        //     } else {\n        //         ingredients[param[0]] = +param[1];\n        //     }\n        // }\n        // this.setState( { ingredients: ingredients, totalPrice: price } );\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if ( this.props.ings ) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect( mapStateToProps )( Checkout );","import React from 'react';\nimport './Order.css'\nconst order = ( props ) => {\n    const ingredients = [];\n    \n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                quantity: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '4px 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.quantity})</span>;\n    });\n\n    return (\n        <div className=\"order\"> \n            <p>{props.orderData.name}</p>\n            <p>Ingredients:</p>\n            <p>{ingredientOutput}</p>\n            <p>Price (INR): <strong>{Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        // axios.get('/orders.json')\n        //     .then(res => {\n        //         // convert obj into array \n        //         const fetchedOrders = [];\n        //         for (let key in res.data) {\n        //             fetchedOrders.push({\n        //                 ...res.data[key],\n        //                 id: key\n        //             });\n        //         }\n        //         console.log(fetchedOrders)\n        //         this.setState({loading: false, orders: fetchedOrders});\n        //     })\n        //     .catch(err => {\n        //         this.setState({loading: false});\n        //     });\n        \n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    orderData = {order.orderData}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }; \n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React from 'react'\r\nimport './About.css'\r\nconst about = (props) => {\r\n  return(\r\n      <div style={{marginTop: '72px'}}>\r\n    <div className=\"about\">\r\n        <h3>Burger Builder</h3>\r\n        <h4>About App:</h4>\r\n        <p>Burger Builder App is basically used to create a virtual burger with the help of mentioned ingredients \r\n            and order it by filling our details.</p>\r\n            <p>Steps to Order your Burger:</p>\r\n            <ol>\r\n                <li>Create a burger with the help of mentioned ingredients.</li>\r\n                <li>Confirm you ingredients in burger and press continue.</li>\r\n                <li>View your burger final look, if its good then press Continue.</li>\r\n                <li>Now finally, fill your details (Name, Address, Email, Phone No. and Delivery Type) to Order.</li>\r\n                <li>Now click on Order to order your burger, We will reach you very soon to deliver it.</li>\r\n            </ol>\r\n            </div>\r\n            <div className=\"about\">\r\n        <h4>ReactJs concepts Used</h4>\r\n        <ul>\r\n            <li>Basis Fetures and Synax(ES6)</li>\r\n            <li>JSX and Components</li>\r\n            <li>Function and Class Components</li>\r\n            <li>Lifecycle Methods</li>\r\n            <li>Event Handling</li>\r\n            <li>Ajax/Http Call (axios)</li>\r\n            <li>Forms and its Validations</li>\r\n            <li>React Routing</li>\r\n        </ul>\r\n    </div>\r\n    </div>\r\n   )\r\n }\r\n\r\nexport default about","import React, { Component } from 'react'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport './Auth.css'\r\nimport * as actions from '../../store/actions/auth';\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLingth: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.buildingBurger && this.props.authRedirect !== '/'){\r\n            this.onSetAuthRedirect();\r\n        }\r\n    }\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event, isSignup) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ))\r\n\r\n        if (this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n        let authRedirect = null\r\n        if(this.props.isAuth){\r\n            authRedirect = <Redirect to = {this.props.authRedirect} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth\">\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"button success\">{this.state.isSignup ? \"SIGNUP\" : \"SIGNIN\"}</Button>\r\n                </form>\r\n                <Button \r\n                    clicked ={this.switchAuthModeHandler}\r\n                    btnType=\"button danger\">Switch To {this.state.isSignup ? \"Sign In\" : \"Sign Up\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirect: state.auth.authRedirect\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth : (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirect: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Auth)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/CheckOut/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport About from './components/About/About'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions/index'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n  render () {\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/auth\" component={Auth} />\n            <Redirect to='/' />\n          </Switch>\n    );\n\n    if (this.props.isAuth){\n      routes = (\n        <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/logout\" component={Logout} />\n            <Redirect to='/' />\n          </Switch>\n      )\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !==null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 16,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 15,\n    cheese: 16,\n    paneer: 40,\n    bacon: 20\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            paneer: action.ingredients.paneer\n        },\n        totalPrice: 16,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\nconst initialState= {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirect: \"/\"\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error:null, loading:true})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        error:null, \r\n        loading:false,\r\n        token: action.idToken,\r\n        userId: action.userId\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error:action.error, \r\n        loading:false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token:null, userId: null})\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirect: action.path})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action)\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action)\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action)\r\n        case actionTypes.SET_AUTH_REDIRECT:\r\n            return setAuthRedirectPath(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}